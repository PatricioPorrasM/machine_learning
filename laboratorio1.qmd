---
title: "Laboratorio 1"
author: "Patricio Porras"
date: "2025-09-27"
format: 
    html: 
        embed-resources: true
echo: false
---

# Laboratorio 1

## Contexto

Datos Históricos del año 2014 al 2024 referente a la Operación Estadística de Homicidios Intencionales.
Datos del mnisterio del interior.

## Carga de datos

```{python}
import pandas as pd
import altair as alt
```

```{python}
data_df = pd.read_csv("mdi_homicidios_intencionales_pm_2014_2024.csv")
```

```{python}
data_df.head()
```

```{python}
data_df.describe()
```


```{python}
data_df.info()
```


```{python}
# Reemplaza "sin dato" por NaN
data_df["edad"] = data_df["edad"].replace("SIN DATO", pd.NA)

# Convierte la columna a numérica (si no lo está)
data_df["edad"] = pd.to_numeric(data_df["edad"], errors="coerce")

# Calcula la media ignorando los nulos
media_edad = data_df["edad"].mean()

# Rellena los nulos con la media
data_df["edad"] = data_df["edad"].fillna(media_edad)

#data_df["codigo_provincia"] = pd.to_numeric(data_df["codigo_provincia"], errors="0")
```

```{python}
data_df["fecha_infraccion_dt"] = pd.to_datetime(data_df["fecha_infraccion"], errors="coerce")
data_df["year"] = data_df["fecha_infraccion_dt"].dt.year
```

```{python}
data_df.info()

```

```{python}
# Agrupa los datos por provincia y tipo de arma, y cuenta el total de muertes
df_grouped = data_df.groupby(['provincia', 'arma']).size().reset_index(name='total_muertes')
```

## Graficas

### Edad de las víctimas de homicidio por provincia y tipo de arma

```{python}
# Gráfico de puntos: total de muertes por tipo de arma y provincia
alt.Chart(df_grouped).mark_point(filled=True, size=100, opacity=0.8).encode(
    x=alt.X("provincia:N", title="Provincia", sort="-y", axis=alt.Axis(labelAngle=-45)),
    y=alt.Y("arma:N", title="Tipo de arma"),
    size=alt.Size("total_muertes:Q", title="Total de muertes"),
    color=alt.Color("arma:N", title="Tipo de arma"),
    tooltip=["provincia", "arma", "total_muertes"]
).properties(
    title="Total de muertes por tipo de arma y provincia",
    width=700,
    height=400
).interactive()
```


```{python}
alt.Chart(data_df).mark_point(filled=True, size=80, opacity=0.7).encode(
    x=alt.X("provincia:N", title="Provincia", sort="-y", axis=alt.Axis(labelAngle=-45)),
    y=alt.Y("edad:Q", title="Edad de la víctima"),
    color=alt.Color("arma:N", title="Tipo de arma"),
    shape=alt.Shape("arma:N", title="Tipo de arma"),
    tooltip=["provincia", "edad", "arma", "year"]
).properties(
    title="Edad de las víctimas de homicidio por provincia y tipo de arma",
    width=700,
    height=400
).interactive()
```

### Total de homicidios por año y provincia

```{python}
alt.Chart(data_df).mark_bar().encode(
    x=alt.X('provincia:N', sort='-y', title='Provincia'),
    y=alt.Y('count():Q', title='Total de registros'),
    color=alt.Color('year:N', title='Año'),
    tooltip=['provincia', 'year', 'count()']
).properties(
    title='Total de homicidios por año y provincia'
)
```

### Número de homicidios por año y provincia

```{python}
alt.Chart(data_df).mark_line(point=True).encode(
    x=alt.X('year:O', title='Año'),
    y=alt.Y('count():Q', title='Total de muertes'),
    color=alt.Color('provincia:N', title='Provincia'),
    tooltip=['provincia', 'year', 'count()']
).properties(
    title='Número de homicidios por año y provincia'
)
```


```{python}
df_2024 = data_df[data_df["year"] == 2024].copy()

# Extrae el mes de la fecha de infracción
df_2024["mes"] = df_2024["fecha_infraccion_dt"].dt.month

# Gráfico de líneas: total de homicidios por mes y provincia para 2024
alt.Chart(df_2024).mark_line(point=True).encode(
    x=alt.X('mes:O', title='Mes'),
    y=alt.Y('count():Q', title='Total de homicidios'),
    color=alt.Color('provincia:N', title='Provincia'),
    tooltip=['provincia', 'mes', 'count()']
).properties(
    title='Total de homicidios por mes y provincia en 2024'
)
```