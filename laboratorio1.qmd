---
title: "Laboratorio 1"
author: "Patricio Porras"
date: "2025-09-27"
format: 
    html: 
        code-fold: true
        toc: true
        number-sections: true
        df-print: paged
        embed-resources: false
echo: false
---

# Homicidio Intencionales 2014 - 2024
___

## Contexto

Datos Históricos del año 2014 al 2024 referente a la Operación Estadística de Homicidios Intencionales.
Datos del mnisterio del interior.

## Carga de datos

```{python}
import pandas as pd
import altair as alt
```

Evitar restricción de los 5k registros en el DataSet
```{python}
alt.data_transformers.disable_max_rows()
```

```{python}
data_df = pd.read_csv("mdi_homicidios_intencionales_pm_2014_2024-completo.csv")
```

```{python}
data_df.head()
```

```{python}
data_df.describe()
```


```{python}
data_df.info()
```


```{python}
# Reemplaza "sin dato" por NaN
data_df["edad"] = data_df["edad"].replace("SIN DATO", pd.NA)

# Convierte la columna a numérica (si no lo está)
data_df["edad"] = pd.to_numeric(data_df["edad"], errors="coerce")

# Calcula la media ignorando los nulos
media_edad = data_df["edad"].mean()

# Rellena los nulos con la media
data_df["edad"] = data_df["edad"].fillna(media_edad)

#data_df["codigo_provincia"] = pd.to_numeric(data_df["codigo_provincia"], errors="0")
```

```{python}
data_df["fecha_infraccion_dt"] = pd.to_datetime(data_df["fecha_infraccion"], errors="coerce")
data_df["year"] = data_df["fecha_infraccion_dt"].dt.year
```

```{python}
data_df.info()
```

```{python}
# Agrupa los datos por provincia y tipo de arma, y cuenta el total de muertes
df_grouped = data_df.groupby(['provincia', 'arma']).size().reset_index(name='total_muertes')
```

---

## Graficas

***

### Edad de las víctimas de homicidio por provincia y tipo de arma

```{python}
# Agrupa por zona, arma y año
df_grouped_year = data_df.groupby(['zona', 'arma', 'year']).size().reset_index(name='total_muertes')

# Gráfico de puntos por año
alt.Chart(df_grouped_year).mark_point(filled=True, size=80, opacity=0.8).encode(
    x=alt.X("zona:N", title="Zona", sort="-y", axis=alt.Axis(labelAngle=-45)),
    y=alt.Y("total_muertes:Q", title="Total de muertes"),
    color=alt.Color("arma:N", title="Tipo de arma"),
    shape=alt.Shape("arma:N", title="Tipo de arma"),
    column=alt.Column("year:O", title="Año"),  # Un gráfico por cada año
    tooltip=["zona", "arma", "year", "total_muertes"]
).properties(
    title="Total de muertes por tipo de arma y zona, por año",
    width=300,
    height=350
).interactive()
```

### Total de homicidios por año y provincia

```{python}
alt.Chart(data_df).mark_bar().encode(
    x=alt.X('zona:N', sort='-y', title='Zona'),
    y=alt.Y('count():Q', title='Total de registros'),
    color=alt.Color('year:N', title='Año'),
    tooltip=['zona', 'year', 'count()']
).properties(
    title='Total de homicidios por año y zona',
    width=600,
    height=350
)
```

### Número de homicidios por año y provincia


```{python}
# Gráfico de líneas: total de homicidios por mes y provincia para 2024
alt.Chart(data_df).mark_line(point=True).encode(
    x=alt.X('year:O', title='Año'),
    y=alt.Y('count():Q', title='Total de homicidios'),
    color=alt.Color('provincia:N', title='Provincia'),
    tooltip=['provincia', 'year', 'count()']
).properties(
    title='Total de homicidios por año y provincia',
    width=600,
    height=350
)
```

***


#```{python}
alt.Chart(data_df).mark_bar().encode(
    x=alt.X('year:O', title='Año'),
    y=alt.Y('count():Q', title='Total de homicidios'),
    tooltip=['year', 'count()']
).properties(
    title='Tendencia de homicidios por año'
)
#```


#```{python}
alt.Chart(data_df).mark_bar().encode(
    x=alt.X('provincia:N', sort='-y', title='Provincia', axis=alt.Axis(labelAngle=-45)),
    y=alt.Y('count():Q', title='Total de homicidios'),
    tooltip=['provincia', 'count()']
).properties(
    title='Total de homicidios por provincia'
)
#```


#```{python}
alt.Chart(data_df).mark_bar().encode(
    x=alt.X('edad:Q', bin=alt.Bin(maxbins=30), title='Edad de la víctima'),
    y=alt.Y('count():Q', title='Número de víctimas'),
    tooltip=['edad', 'count()']
).properties(
    title='Distribución de edades de las víctimas'
)
#```


#```{python}
alt.Chart(data_df).mark_bar().encode(
    x=alt.X('arma:N', sort='-y', title='Tipo de arma'),
    y=alt.Y('count():Q', title='Total de homicidios'),
    color=alt.Color('arma:N', legend=None),
    tooltip=['arma', 'count()']
).properties(
    title='Total de homicidios por tipo de arma'
)
#```


#```{python}
data_df["mes"] = data_df["fecha_infraccion_dt"].dt.month

alt.Chart(data_df).mark_line(point=True).encode(
    x=alt.X('mes:O', title='Mes'),
    y=alt.Y('count():Q', title='Total de homicidios'),
    color=alt.Color('year:N', title='Año'),
    tooltip=['year', 'mes', 'count()']
).properties(
    title='Homicidios por mes y año'
)
#```


#```{python}
df_edad_prov = data_df.groupby('provincia')['edad'].mean().reset_index()

alt.Chart(df_edad_prov).mark_bar().encode(
    x=alt.X('provincia:N', sort='-y', title='Provincia', axis=alt.Axis(labelAngle=-45)),
    y=alt.Y('edad:Q', title='Edad promedio'),
    tooltip=['provincia', 'edad']
).properties(
    title='Edad promedio de víctimas por provincia'
)
#```


#```{python}
df_grouped = data_df.groupby(['provincia', 'arma']).size().reset_index(name='total_muertes')

alt.Chart(df_grouped).mark_point(filled=True, size=100, opacity=0.8).encode(
    x=alt.X("provincia:N", title="Provincia", sort="-y", axis=alt.Axis(labelAngle=-45)),
    y=alt.Y("arma:N", title="Tipo de arma"),
    size=alt.Size("total_muertes:Q", title="Total de muertes"),
    color=alt.Color("arma:N", title="Tipo de arma"),
    tooltip=["provincia", "arma", "total_muertes"]
).properties(
    title="Total de muertes por tipo de arma y provincia",
    width=700,
    height=400
).interactive()
#```